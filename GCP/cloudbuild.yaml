options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 0: Construir imagen de Docker
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest', '.']

  # Step 1: Enviar la imagen a Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest']

  # Step 2: Hacer el deploy de la imagen a Google Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '$_CLOUD_RUN_SERVICE'
      - '--image=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--allow-unauthenticated'

  # Step 3: Ejecutar Cloud Run URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        set -e  # Stop execution on any error
        gcloud run services describe $_CLOUD_RUN_SERVICE --region=$_REGION --platform=managed --format='value(status.url)'
        echo "Executing Cloud Run service at https://$_CLOUD_RUN_SERVICE-6ks3mtyyxq-uc.a.run.app/$_PIPELINE_TYPE" &&
        curl "https://$_CLOUD_RUN_SERVICE-6ks3mtyyxq-uc.a.run.app/$_PIPELINE_TYPE"

substitutions:
  _PROJECT_ID: 'entregable_02-391421'
  _REGION: 'us-central1'
  _REPOSITORY_NAME: 'entregable_02'
  _IMAGE_NAME: 'entregable_02'
  _CLOUD_RUN_SERVICE: 'entregable_02-service'
  _PIPELINE_TYPE: 'train_pipeline'

images:
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest'